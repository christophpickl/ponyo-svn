
- rename namespace pn to ponyo (verschachtelte sogar moeglich)
=================================================
TODOs
=================================================
* use cmake + cxxtest
* use cmake + openni lib
* get matlab engine running
* use cmake + matlab engine (no mex!)


! asus competition: http://event.asus.com/wavi/gallery/Event_Term.aspx
!! register openni callbacks for joint data (skeleton tracking)
!! refactor Device logic; add depthGenerator
! have a look at "g_DepthGenerator.ConvertProjectiveToRealWorld ( (XnUInt32)npixels, pt_proj, pt_world);"
! @CODE: wrapper klasse fuer openni aufrufe mit check returnCode+throw exception (? heisst das alle klassen, nicht nur context, einen wrapper schreiben?!)
! @BUILD: investigate pkg-config (see openCV)
! investige openNi skeleton tracking facilities (confidence value, orientation, ...)
! fix OpenNI strange behaviour, of depth camera points different from rgb (as camera is slightly positioned a bit to the left/right) => apply some correction value, just as calibration-delta
	==> DepthGenerator.GetAlternativeViewPointCap().SetViewPoint(ImageGenerator)"
- experimental investigate NITE framework (pre-built gestures (wave, circle, ..), etc)
- @MEX: compile c++ from matlab code: mcc -B csharedlib:libmyfoo foo1.m foo2.m // http://www.mathworks.com/support/tech-notes/1600/1622.html
- @GLUT: continue reading glut tutorial: http://www.lighthouse3d.com/tutorials/glut-tutorial/keyboard/
-- @MEX: mexErrMsgIdAndTxt("MATLAB:mexcpp:nargout", "MEXCPP requires no output argument.");
-- @BUILD: cpp maven integration (maybe via cmake?!)
-- go through github sourcecode related to openni: https://github.com/search?q=openni&type=Everything&repo=&langOverride=&start_value=1
-- go through project sourcecode
	* https://github.com/roxlu/ofxOpenNI
	* https://github.com/johnboiles/JBKinectHacks
		eg: https://github.com/johnboiles/JBKinectHacks/blob/master/MouseController/main-MouseController.cpp
	* https://github.com/pixelnerve/BlockOpenNI
		eg: https://github.com/pixelnerve/BlockOpenNI/blob/master/src/VOpenNIDevice.cpp
// INFO: XnCallbackHandle purpose => Optional. Will be filled with a handle to be passed to @ref UnregisterFromGenerationRunningChange().

		<Node type="IR" name="IR1">
			<Configuration>
				<MapOutputMode xRes="1280" yRes="1024" FPS="15"/>
				<Mirror on="true"/>
			</Configuration>
		</Node>		

=================================================
CPP
=================================================
! @C++: get familiar with building: static vs dynamic lib
	// #add_library(PnCommon SHARED ${CPP_FILES})
- google mock
- enums for c++: enum directions {up, down};
-- @C++: garbage collector framework
-- read c++ guide: http://stackoverflow.com/questions/30373/what-c-pitfalls-should-i-avoid
-- @Async: create custom type with some (bound?!) type-parameter
-- dependency injection?

=================================================
MAKE
=================================================
- http://www.cmake.org/Wiki/CMake_Useful_Variables
- @MAKE BUILD: have a look at openni make files
	// eg in make: OSTYPE := $(shell uname -s) ... ifneq ("$(OSTYPE)","Darwin")
	// eg in c++: #if defined(__APPLE__) || defined(MACOSX)

? proper *.o compilation
* check for operating system:
	OSTYPE := $(shell uname -s)
	ifeq ("$(OSTYPE)","Darwin") ...
	// or: OSTYPE is not set by default on Mac OS X.  Should end up being "darwin"
		ifndef OSTYPE
			OSTYPE = $(shell uname -s|awk '{print tolower($$0)}')
		endif + ifeq ($(OSTYPE),linux) ... 
* prefix command with "@" to suppress echoing command
* echo -n "xyz" to suppress newline
* relevant flags:
	"-lstdc++" ... adds standard C++ library
* merge options:
	INCLUDES += /usr/local/include
	INCLUDES_MERGED = $(foreach dir,$(INCLUDES),-I$(dir))
* predefined variables:
	$< ... whatever the depencies are
	$@ ... the target
* relevant g++ options:
	-g ... Put debugging information for gdb into the object or executable file. Should be specified for both compilation and linking (Compilation and link option)
	-c ... Compile only. Produces .o files from source files without doing any linking (Compilation option) 
	-Dname=value ... In the program being compiled, define name as if there were a line (Compilation option)
	-Wall ... Produce warning messages about a number of things that are legal but dubious (Compilation option)
		// I strongly suggest that you always specify this and that you treat every warning as an error to be fixed.
	-O2 ... optimize code; see: http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html

	#if defined(__APPLE__)
	#include <GLUT/glut.h>
	#include <OpenGL/gl.h>
	#include <OpenGL/glu.h>
	#else
	#include <GL/glut.h>
	#include <GL/gl.h>
	#include <GL/glu.h>
	#endif

=================================================
IDEAs
=================================================
- collaborate with others:
	* libfreenect community
	* Swiss university / Prof. Vandergheynst 
		- http://lts2www.epfl.ch
	* casala company
		- http://www.youtube.com/watch?v=fxnMMVy9tFU
		- http://www.casala.ie/collaborate-with-us.html
- have a look at libfreenect project ideas:
	http://openkinect.org/wiki/Project_ideas
	http://openkinect.org/wiki/Gallery
// sehr gute uni arbeit (predator): http://www.youtube.com/watch?v=1GhNXHCQGsM


=================================================
LINKs
=================================================

Matlab
-------------------------------------------------
- matlab tutorials
	http://mechanical.poly.edu/faculty/vkapila/matlabtutor.htm
- mex tutorials
	http://www.mathworks.com/help/techdoc/matlab_external/f29502.html
- matlab engine
	http://www.mathworks.com/help/techdoc/matlab_external/f29148.html

OpenNI
-------------------------------------------------
- wiki with good faq
	http://wiki.openni.org/mediawiki/index.php/Main_Page

Boost
-------------------------------------------------
- official site
	http://www.boost.org
- goood tutorial
	http://antonym.org/2009/05/threading-with-boost---part-i-creating-threads.html
- misc
	http://www.boost.org/doc/libs/1_41_0/libs/thread/example/
	http://www.boost.org/doc/libs/1_41_0/libs/iostreams/doc/installation.html
	http://www.highscore.de/cpp/boost/multithreading.html
	http://programmingexamples.net/index.php?title=CPP/Boost/Threads
	http://drdobbs.com/cpp/184401518

CMake
-------------------------------------------------
- official site
	http://www.cmake.org/Wiki/CMake
- documentation
	http://www.cmake.org/cmake/help/documentation.html
- examples
	http://www.cmake.org/cmake/help/examples.html
- more examples
	http://www.vtk.org/Wiki/CMake/Examples

Tools
-------------------------------------------------
- OpenCV (Open Source Computer Vision)
	http://opencv.willowgarage.com/wiki/
- glut
	http://www.lighthouse3d.com/opengl/glut/
	http://www.opengl.org/documentation/specs/glut/spec3/spec3.html
- CxxUnit
	http://cxxunit.sourceforge.net/

Misc
-------------------------------------------------
- JNI documentation
	http://java.sun.com/docs/books/jni/html/start.html
	http://java.sun.com/developer/onlineTraining/Programming/JDCBook/jniexamp.html
- Make documentation
	http://www.gnu.org/software/make/manual/make.html
- openFrameworks forum
	http://www.openframeworks.cc/forum
	
C++
-------------------------------------------------
- Understanding C++ Exception Handling
	http://www.gamedev.net/page/resources/_/reference/programming/languages/c-and-c/understanding-c-exception-handling-r953
- C++ STL (Standard Template Library) Tutorial and Examples
	http://www.yolinux.com/TUTORIALS/LinuxTutorialC++STL.html
- C++ Class Templates
	http://www.codersource.net/c/c-tutorial-on-templates/c-class-templates.aspx