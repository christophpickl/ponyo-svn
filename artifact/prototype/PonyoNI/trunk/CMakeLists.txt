MESSAGE ("==============> ROOT")

# general setup
	CMAKE_MINIMUM_REQUIRED (VERSION 2.8) 
	PROJECT (PonyoNI)
	#SET(EXECUTABLE_OUTPUT_PATH target)
	
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2") # prevent "Undefined symbols" error
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
	#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")


# LIB - Glut
	#FIND_PACKAGE (GLUT) ???????
	#FIND_PACKAGE (OpenGL) ???????
	
	INCLUDE_DIRECTORIES( /System/Library/Frameworks )
	FIND_LIBRARY(GLUT_LIBRARY GLUT )
	FIND_LIBRARY(OpenGL_LIBRARY OpenGL )
	MARK_AS_ADVANCED (GLUT_LIBRARY OpenGL_LIBRARY)
	SET(EXTRA_LIBS ${EXTRA_LIBS} ${GLUT_LIBRARY} ${OpenGL_LIBRARY})

# LIB - OpenCV
	FIND_PACKAGE ( OpenCV REQUIRED )
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${OpenCV_LIBS})

# LIB - Boost
	SET (BOOST_LIBS thread date_time system)
	FIND_PACKAGE (Boost COMPONENTS ${BOOST_LIBS} REQUIRED)
	FIND_PACKAGE (Threads REQUIRED)
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${Boost_LIBRARIES})
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${CMAKE_THREAD_LIBS_INIT})

# LIB - OpenNI
	INCLUDE_DIRECTORIES (/usr/include/ni)
	FIND_LIBRARY (OpenNI_LIBRARY OpenNI)
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${OpenNI_LIBRARY})

# TODO inject version&co mit hpp.in

MACRO (PN_SETUP_LIB LIBNAME)
    MESSAGE (">>>> PN_SETUP (LIBNAME='${LIBNAME}')")
    INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/${LIBNAME}/src")
	ADD_SUBDIRECTORY (${LIBNAME})
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${LIBNAME})
ENDMACRO (PN_SETUP_LIB) 

PN_SETUP_LIB ("PnCommon")

# PnCommon
	#INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/PnCommon/src")
	#ADD_SUBDIRECTORY (PnCommon)
	#SET (EXTRA_LIBS ${EXTRA_LIBS} PnCommon)

# PnOpenNI
	INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/PnOpenNI/src")
	ADD_SUBDIRECTORY (PnOpenNI)
	SET (EXTRA_LIBS ${EXTRA_LIBS} PnOpenNI)

# PnJNA
	INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/PnJNA/src")
	ADD_SUBDIRECTORY (PnJNA)
	SET (EXTRA_LIBS ${EXTRA_LIBS} PnJNA)

# PonyoNIApp
	ADD_SUBDIRECTORY (PonyoNIApp)

# some messages
	MESSAGE ("[ROOT] CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
	MESSAGE ("[ROOT] EXTRA_LIBS: ${EXTRA_LIBS}")

ADD_DEPENDENCIES (PnOpenNI PnCommon)
ADD_DEPENDENCIES (PnJNA PnOpenNI)


#ADD_EXECUTABLE(unit_yyy src/unit_yyy.cpp)
#TARGET_LINK_LIBRARIES(unit_yyy ${OPENTISSUE_LIBS} ${Boost_unit_test_framework_LIBRARY})
#INSTALL( TARGETS unit_yyy RUNTIME DESTINATION  bin/units )
#ADD_TEST( unit_yyy unit_yyy )
