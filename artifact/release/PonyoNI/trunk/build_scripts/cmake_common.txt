MESSAGE ("=> COMMON")

SET (PN_VERSION_MAJOR 0)
SET (PN_VERSION_MINOR 1-SNAPSHOT)
SET (PN_FILTERING_VERSION_MAJOR \"${PN_VERSION_MAJOR}\")
SET (PN_FILTERING_VERSION_MINOR \"${PN_VERSION_MINOR}\")
SET (PN_FULL_VERSION ${PN_VERSION_MAJOR}.${PN_VERSION_MINOR})
MESSAGE ("PN_FULL_VERSION: ${PN_FULL_VERSION}")

# MACRO: SETUP LIB
###############################################################################
MACRO (PN_SETUP_LIB LIBNAME)
    MESSAGE ("===> Setting up library: ${LIBNAME}")
    INCLUDE_DIRECTORIES ("${PROJECT_SOURCE_DIR}/${LIBNAME}/src")
	ADD_SUBDIRECTORY (${LIBNAME})
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${LIBNAME})
ENDMACRO (PN_SETUP_LIB)

# MACRO: INIT LIB
###############################################################################
MACRO (PN_INIT_LIB LIBNAME)
	MESSAGE("// Initializing library: ${LIBNAME}")
	SET (PROJECT_SOURCE_DIR src)
	INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR})
	
	FILE (GLOB_RECURSE CPP_FILES "${PROJECT_SOURCE_DIR}/*.cpp")
	ADD_LIBRARY (${LIBNAME} SHARED ${CPP_FILES})
	TARGET_LINK_LIBRARIES (${LIBNAME} ${EXTRA_LIBS})
	
	SET_TARGET_PROPERTIES (${LIBNAME} PROPERTIES VERSION ${PN_FULL_VERSION})
  
	INSTALL (TARGETS ${LIBNAME} LIBRARY DESTINATION lib)
	INSTALL (DIRECTORY ${PROJECT_SOURCE_DIR}/ponyo
	         DESTINATION include
	         FILES_MATCHING PATTERN "*.hpp"
	                        PATTERN ".svn" EXCLUDE
	        )
	MESSAGE ("")
ENDMACRO (PN_INIT_LIB)

# MACRO: SETUP EXE
###############################################################################
MACRO (PN_SETUP_EXE EXENAME)
    MESSAGE ("===> Setting up application: ${EXENAME}")
	ADD_SUBDIRECTORY (${EXENAME})
ENDMACRO (PN_SETUP_EXE) 

# MACRO: INIT EXE
###############################################################################
MACRO (PN_INIT_EXE EXENAME TARGETNAME)
	MESSAGE("// Initializing application: ${EXENAME}")
	
	SET (PROJECT_SOURCE_DIR src)
	
	SET (EXECUTABLE_OUTPUT_PATH bin)
	#SET (EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/samples/bin)
	
	# TODO even necessary??
	INCLUDE_DIRECTORIES (${PROJECT_SOURCE_DIR})
	
	FILE (GLOB_RECURSE PNOSC_CPP_FILES "${PROJECT_SOURCE_DIR}/*.cpp")
	ADD_EXECUTABLE (${TARGETNAME} ${PNOSC_CPP_FILES})
	TARGET_LINK_LIBRARIES (${TARGETNAME} ${EXTRA_LIBS})
	
	SET_TARGET_PROPERTIES (${TARGETNAME} PROPERTIES VERSION ${PN_FULL_VERSION})
	
	INSTALL (TARGETS ${TARGETNAME} DESTINATION bin)
	
	MESSAGE ("")
ENDMACRO (PN_INIT_EXE)

# COMPILER FLAGS
###############################################################################
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2") # prevent "Undefined symbols" error
	#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
	#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")


# DEPENDENCIES
###############################################################################

MACRO (PN_DEPENDENCY_OPENNI)
	MESSAGE ("Adding Dependency OPENNI")
    INCLUDE_DIRECTORIES (/usr/include/ni)
	FIND_LIBRARY (OpenNI_LIBRARY OpenNI)
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${OpenNI_LIBRARY})
ENDMACRO (PN_DEPENDENCY_OPENNI)

MACRO (PN_DEPENDENCY_OSCPACK)
	MESSAGE ("Adding Dependency OSCPACK")
	INCLUDE_DIRECTORIES (/usr/local/include/oscpack)
	FIND_LIBRARY (OscPack_LIBRARY oscpack)
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${OscPack_LIBRARY})
ENDMACRO (PN_DEPENDENCY_OSCPACK)
	
MACRO (PN_DEPENDENCY_BOOST)
	MESSAGE ("Adding Dependency BOOST")
	SET (BOOST_LIBS thread date_time system)
	FIND_PACKAGE (Boost COMPONENTS ${BOOST_LIBS} REQUIRED)
	FIND_PACKAGE (Threads REQUIRED)
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${Boost_LIBRARIES})
	SET (EXTRA_LIBS ${EXTRA_LIBS} ${CMAKE_THREAD_LIBS_INIT})
ENDMACRO (PN_DEPENDENCY_BOOST)

MACRO (PN_DEPENDENCY_GLUT)
	MESSAGE ("Adding Dependency GLUT")
	INCLUDE_DIRECTORIES (/System/Library/Frameworks)
	FIND_LIBRARY (GLUT_LIBRARY GLUT)
	FIND_LIBRARY (OpenGL_LIBRARY OpenGL )
	MARK_AS_ADVANCED (GLUT_LIBRARY OpenGL_LIBRARY)
	SET(EXTRA_LIBS ${EXTRA_LIBS} ${GLUT_LIBRARY} ${OpenGL_LIBRARY})
ENDMACRO (PN_DEPENDENCY_GLUT)
